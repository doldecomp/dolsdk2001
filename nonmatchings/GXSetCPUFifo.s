/* 000005D8 0000060C  7C 08 02 A6 */	mflr r0
/* 000005DC 00000610  90 01 00 04 */	stw r0, 0x4(r1)
/* 000005E0 00000614  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 000005E4 00000618  BF 61 00 14 */	stmw r27, 0x14(r1)
/* 000005E8 0000061C  90 61 00 08 */	stw r3, 0x8(r1)
/* 000005EC 00000620  3C 60 00 00 */	lis r3, __data_0@ha
/* 000005F0 00000624  3B 83 00 00 */	addi r28, r3, __data_0@l
/* 000005F4 00000628  83 E1 00 08 */	lwz r31, 0x8(r1)
/* 000005F8 0000062C  48 00 00 01 */	bl OSDisableInterrupts
/* 000005FC 00000630  7C 7B 1B 78 */	mr r27, r3
/* 00000600 00000634  93 E0 00 00 */	stw r31, CPUFifo
/* 00000604 00000638  80 60 00 00 */	lwz r3, CPUFifo
/* 00000608 0000063C  80 00 00 00 */	lwz r0, GPFifo
/* 0000060C 00000640  7C 03 00 40 */	cmplw r3, r0
/* 00000610 00000644  40 82 00 98 */	bne L_000006A8
/* 00000614 00000648  3B C0 00 00 */	li r30, 0x0
/* 00000618 0000064C  80 1F 00 00 */	lwz r0, 0x0(r31)
/* 0000061C 00000650  54 00 00 BE */	clrlwi r0, r0, 2
/* 00000620 00000654  80 60 00 00 */	lwz r3, __piReg
/* 00000624 00000658  90 03 00 0C */	stw r0, 0xc(r3)
/* 00000628 0000065C  80 1F 00 04 */	lwz r0, 0x4(r31)
/* 0000062C 00000660  54 00 00 BE */	clrlwi r0, r0, 2
/* 00000630 00000664  80 60 00 00 */	lwz r3, __piReg
/* 00000634 00000668  90 03 00 10 */	stw r0, 0x10(r3)
/* 00000638 0000066C  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 0000063C 00000670  54 03 00 BE */	clrlwi r3, r0, 2
/* 00000640 00000674  54 60 D9 55 */	rlwinm. r0, r3, 27, 5, 10
/* 00000644 00000678  41 82 00 18 */	beq L_0000065C
/* 00000648 0000067C  38 7C 00 14 */	addi r3, r28, 0x14
#if DOLPHIN_REVISION >= 45
/* 0000064C 00000680  38 80 02 94 */	li r4, 0x29f
#else
/* 0000064C 00000680  38 80 02 94 */	li r4, 0x294
#endif
/* 00000650 00000684  38 BC 03 98 */	addi r5, r28, 0x398
/* 00000654 00000688  4C C6 31 82 */	crclr 4*cr1+eq
/* 00000658 0000068C  48 00 00 01 */	bl OSPanic
L_0000065C:
/* 0000065C 00000690  57 C4 06 CA */	rlwinm r4, r30, 0, 27, 5
/* 00000660 00000694  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 00000664 00000698  54 03 00 BE */	clrlwi r3, r0, 2
/* 00000668 0000069C  54 60 00 34 */	clrrwi r0, r3, 5
/* 0000066C 000006A0  7C 9E 03 78 */	or r30, r4, r0
/* 00000670 000006A4  57 DE 01 88 */	rlwinm r30, r30, 0, 6, 4
/* 00000674 000006A8  80 60 00 00 */	lwz r3, __piReg
/* 00000678 000006AC  93 C3 00 14 */	stw r30, 0x14(r3)
/* 0000067C 000006B0  38 00 00 01 */	li r0, 0x1
/* 00000680 000006B4  98 00 00 00 */	stb r0, CPGPLinked
/* 00000684 000006B8  38 60 00 01 */	li r3, 0x1
/* 00000688 000006BC  38 80 00 01 */	li r4, 0x1
/* 0000068C 000006C0  48 00 00 01 */	bl __GXWriteFifoIntReset
/* 00000690 000006C4  38 60 00 01 */	li r3, 0x1
/* 00000694 000006C8  38 80 00 00 */	li r4, 0x0
/* 00000698 000006CC  48 00 00 01 */	bl __GXWriteFifoIntEnable
/* 0000069C 000006D0  38 60 00 01 */	li r3, 0x1
/* 000006A0 000006D4  48 00 00 01 */	bl __GXFifoLink
/* 000006A4 000006D8  48 00 00 94 */	b L_00000738
L_000006A8:
/* 000006A8 000006DC  88 00 00 00 */	lbz r0, CPGPLinked
/* 000006AC 000006E0  28 00 00 00 */	cmplwi r0, 0x0
/* 000006B0 000006E4  41 82 00 14 */	beq L_000006C4
/* 000006B4 000006E8  38 60 00 00 */	li r3, 0x0
/* 000006B8 000006EC  48 00 00 01 */	bl __GXFifoLink
/* 000006BC 000006F0  38 00 00 00 */	li r0, 0x0
/* 000006C0 000006F4  98 00 00 00 */	stb r0, CPGPLinked
L_000006C4:
/* 000006C4 000006F8  38 60 00 00 */	li r3, 0x0
/* 000006C8 000006FC  38 80 00 00 */	li r4, 0x0
/* 000006CC 00000700  48 00 00 01 */	bl __GXWriteFifoIntEnable
/* 000006D0 00000704  3B A0 00 00 */	li r29, 0x0
/* 000006D4 00000708  80 1F 00 00 */	lwz r0, 0x0(r31)
/* 000006D8 0000070C  54 00 00 BE */	clrlwi r0, r0, 2
/* 000006DC 00000710  80 60 00 00 */	lwz r3, __piReg
/* 000006E0 00000714  90 03 00 0C */	stw r0, 0xc(r3)
/* 000006E4 00000718  80 1F 00 04 */	lwz r0, 0x4(r31)
/* 000006E8 0000071C  54 00 00 BE */	clrlwi r0, r0, 2
/* 000006EC 00000720  80 60 00 00 */	lwz r3, __piReg
/* 000006F0 00000724  90 03 00 10 */	stw r0, 0x10(r3)
/* 000006F4 00000728  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 000006F8 0000072C  54 03 00 BE */	clrlwi r3, r0, 2
/* 000006FC 00000730  54 60 D9 55 */	rlwinm. r0, r3, 27, 5, 10
/* 00000700 00000734  41 82 00 18 */	beq L_00000718
/* 00000704 00000738  38 7C 00 14 */	addi r3, r28, 0x14
#if DOLPHIN_REVISION >= 45
/* 00000708 0000073C  38 80 02 B7 */	li r4, 0x2c2
#else
/* 00000708 0000073C  38 80 02 B7 */	li r4, 0x2b7
#endif
/* 0000070C 00000740  38 BC 03 98 */	addi r5, r28, 0x398
/* 00000710 00000744  4C C6 31 82 */	crclr 4*cr1+eq
/* 00000714 00000748  48 00 00 01 */	bl OSPanic
L_00000718:
/* 00000718 0000074C  57 A4 06 CA */	rlwinm r4, r29, 0, 27, 5
/* 0000071C 00000750  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 00000720 00000754  54 03 00 BE */	clrlwi r3, r0, 2
/* 00000724 00000758  54 60 00 34 */	clrrwi r0, r3, 5
/* 00000728 0000075C  7C 9D 03 78 */	or r29, r4, r0
/* 0000072C 00000760  57 BD 01 88 */	rlwinm r29, r29, 0, 6, 4
/* 00000730 00000764  80 60 00 00 */	lwz r3, __piReg
/* 00000734 00000768  93 A3 00 14 */	stw r29, 0x14(r3)
L_00000738:
/* 00000738 0000076C  7C 00 04 AC */	sync
/* 0000073C 00000770  7F 63 DB 78 */	mr r3, r27
/* 00000740 00000774  48 00 00 01 */	bl OSRestoreInterrupts
/* 00000744 00000778  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 00000748 0000077C  BB 61 00 14 */	lmw r27, 0x14(r1)
/* 0000074C 00000780  38 21 00 28 */	addi r1, r1, 0x28
/* 00000750 00000784  7C 08 03 A6 */	mtlr r0
/* 00000754 00000788  4E 80 00 20 */	blr
